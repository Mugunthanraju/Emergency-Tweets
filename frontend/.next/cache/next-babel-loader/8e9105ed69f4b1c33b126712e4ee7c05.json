{"ast":null,"code":"var _jsxFileName = \"/Users/mertcanbilgic/Desktop/projects/imsafe/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport '../styles/app.css';\nimport StoreContext from '../store';\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: theme,\n    1: themeSet\n  } = useState(null);\n  useEffect(() => {\n    const theme = localStorage.getItem('THEME') || 'light';\n    themeSet(theme);\n  }, []);\n\n  const changeTheme = theme => {\n    themeSet(theme);\n    localStorage.setItem('THEME', theme);\n  };\n\n  useEffect(() => {\n    if (!theme) return;\n    const $html = document.querySelector('html');\n    $html.classList.remove('light');\n    $html.classList.remove('dark');\n    $html.classList.remove('dim');\n    $html.classList.add(theme.toString());\n  }, [theme]);\n  return __jsx(StoreContext.Provider, {\n    value: {\n      theme,\n      changeTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/mertcanbilgic/Desktop/projects/imsafe/pages/_app.js"],"names":["React","useEffect","useState","StoreContext","MyApp","Component","pageProps","theme","themeSet","localStorage","getItem","changeTheme","setItem","$html","document","querySelector","classList","remove","add","toString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,mBAAP;AACA,OAAOC,YAAP,MAAyB,UAAzB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACtD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,KAAK,GAAGE,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,OAA/C;AACAF,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMI,WAAW,GAAIJ,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BL,KAA9B;AACD,GAHD;;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,KAAL,EAAY;AACZ,UAAMM,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACAF,IAAAA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB;AACAJ,IAAAA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB;AACAJ,IAAAA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,KAAvB;AACAJ,IAAAA,KAAK,CAACG,SAAN,CAAgBE,GAAhB,CAAoBX,KAAK,CAACY,QAAN,EAApB;AACD,GAPQ,EAON,CAACZ,KAAD,CAPM,CAAT;AASA,SACE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASI,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeL,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport '../styles/app.css'\nimport StoreContext from '../store'\n\nexport default function MyApp({ Component, pageProps }) {\n  const [theme, themeSet] = useState(null)\n\n  useEffect(() => {\n    const theme = localStorage.getItem('THEME') || 'light'\n    themeSet(theme)\n  }, [])\n\n  const changeTheme = (theme) => {\n    themeSet(theme)\n    localStorage.setItem('THEME', theme)\n  }\n\n  useEffect(() => {\n    if (!theme) return\n    const $html = document.querySelector('html')\n    $html.classList.remove('light')\n    $html.classList.remove('dark')\n    $html.classList.remove('dim')\n    $html.classList.add(theme.toString())\n  }, [theme])\n\n  return (\n    <StoreContext.Provider value={{ theme, changeTheme }}>\n      <Component {...pageProps} />\n    </StoreContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}